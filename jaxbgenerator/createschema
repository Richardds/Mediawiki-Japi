#!/bin/bash
# Copyright (c) 2015 BITPlan GmbH
# http://www.bitplan.com
# WF 2015-01-01
# WF 2015-04-05

#
#
#
error() {
  local l_msg="$1"
  echo "$l_msg" 1>&2
  exit 1
}
#
# get the example queries
#
queries() {
  local l_query="http://www.mediawiki.org/w/api.php?action=query"
  local l_parse="http://en.wikipedia.org/w/api.php?action=parse"
  local l_format="&format=xml"
cat << EOF | egrep -v "^#"
#$l_parse&prop=sections&page=License$l_format
#file:creataccount.xml
#file:csrftoken.xml
https://en.wikipedia.org/w/api.php?action=paraminfo&modules=parse|phpfm|query+allpages|query+siteinfo&helpformat=none&format=xml
# set your own username and password here
# change curl further down to -X POST
#http://www.mediawiki.org/w/api.php?&action=login&lgname=user&lgpassword=password&format=xml
#http://capri.bitplan.com/mediawiki/api.php?&action=query&titles=2011_Wikimedia_fundraiser%7C2012_Wikimedia_fundraiser&prop=revisions&rvprop=content&format=xml
#$l_query&list=recentchanges&rcprop=title|ids|sizes|flags|user&rclimit=3$l_format
#http://www.mediawiki.org/w/api.php?&action=query&titles=Main%20Page&prop=revisions&rvprop=content$l_format
#http://www.mediawiki.org/w/api.php?&action=query&titles=2011_Wikimedia_fundraiser|2011_Wikimedia_fundraiser&prop=revisions&rvprop=content$l_format
#$l_query&list=allpages&apfrom=Kre&aplimit=5$l_format
#$l_query&meta=siteinfo&siprop=statistics$l_format
#$l_query&meta=siteinfo$l_format
EOF
}

#
# get a schema
#
getschema() {
  local l_xml="$1"
  local l_tmpschemahtml="/tmp/schemahtml$$"
  local l_tmpschema="/tmp/schema$$.xsd"

  # non working schema generators (mostly not easy to handle with curl ...)
	# xmlschemagen_url="http://www.xmlforasp.net/CodeBank/System_Xml_Schema/BuildSchema/BuildXMLSchema.aspx"
	#  --data "__VIEWSTATEGENERATOR=1BA98693" \
	#  --data "__VIEWSTATE=/wEPDwULLTE0NDc4ODY1NjZkZALwgmQT8TjHX9VW1hRQODpWO37P" \
	#  --data "__EVENTVALIDATION=/wEWBgL4yt2nBgKj+/r1AwKM1c/8AwKkyPGDAQK7yPGDAQK0p9vtDUxLg82ZLCD8XFqL4UFJWhoBlHR7" \
	# xml_schemagen_url="http://xmlgrid.net/xml2xsd.html"
	# xmlschemagen_url="http://www.freeformatter.com/xsd-generator.html"
  #	xmlschemagen_url="http://devutilsonline.com/xsd-xml/generate-xsd-from-xml"
  # curl -s -X -d design=rd -d xmlcontent=@$l_xml $xmlschemagen_url -o $l_tmpschemahtml
  # xmlschemagen_url="http://www.freeformatter.com/xsd-generator.html"
	# curl -s -X --data forceNewWindow=true --data inputString=@$l_xml $xmlschemagen_url -o $l_tmpschemahtml
 	# xmlschemagen_url="http://devutilsonline.com/xsd-xml/generate-xsd-from-xml"
  #curl -s -X --data design=rd --data xmlcontent=@$l_xml $xmlschemagen_url -o $l_tmpschemahtml
  xmlschemagen_url="http://xmlgrid.net/xml2xsd.html"
 	echo "posting to $xmlschemagen_url"
  curls -s -d xmlcontent=@$l_xml $xmlschemagen_url -o $l_tmpschemahtml
	if [ ! -f $l_tmpschemahtml ]
	then
	  error "result from xmlschemagen_url missing"
	fi
	
	cat  $l_tmpschemahtml | xmlstarlet unesc | awk '
BEGIN { 
  quote="\x22"
  printf ("<?xml version=%s1.0%s?>\n",quote,quote) 
}
/\<xs:schema/,/\<\/xs:schema/ { print }	
	' > $l_tmpschema
	rm -f $l_tmpschemahtml
	echo $l_tmpschema
}

#
# generate java code for the schema
#
codegen() {
  local l_xsd="$1"
  local l_tmpcleanxsd="/tmp/schemaclean$$.xsd"
  # remove problematic notes (e.g. duplicate stuff)
  cat $l_xsd \
    | xmlstarlet ed -d "//xs:element[@name='query-continue']" \
    | xmlstarlet ed -d "//xs:attribute[@ref='xml:space']" > $l_tmpcleanxsd
  xjc -b binding.xml -p com.bitplan.mediawiki.japi.api -d src $l_tmpcleanxsd 
    #| xmlstarlet ed -d "/xs:schema/xs:element/xs:complexType/xs:sequence/xs:element[@name='warnings']" \
	# http://stackoverflow.com/questions/5869547/jaxb-creating-modules-for-reuse/5872659#5872659
}

codegen namespace.xsd
exit 1
for query in `queries`
do
  tmpxml=/tmp/mediawiki$$.xml
  echo "getting xml for Query $query ..."
  # uncomment for POST actions e.g. login
  #  curl -s -X POST "$query" -o $tmpxml
  curl -s "$query" -o $tmpxml
 ue $tmpxml
  echo "getting schema for xml result $tmpxml ..."
  #getschema $tmpxml
  #xsd="/tmp/result.xsd"
	#codegen $xsd
done
